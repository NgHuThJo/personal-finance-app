// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  ENTERTAINMENT
  BILLS
  GROCERIES
  TRANSPORTATION
  EDUCATION
  LIFESTYLE
  SHOPPING
  GENERAL
}

model User {
  id         Int           @id @default(autoincrement())
  email      String        @unique
  firstName  String
  lastName   String
  password   String
  balance    Account?
  pot        Pot[]
  budget     Budget[]
  senders    Transaction[] @relation("sender")
  recipients Transaction[] @relation("recipient")
}

model Transaction {
  id                Int      @id @default(autoincrement())
  sender            User     @relation("sender", fields: [senderId], references: [id])
  senderId          Int
  recipient         User     @relation("recipient", fields: [recipientId], references: [id])
  recipientId       Int
  transactionAmount Decimal  @db.Decimal(10, 2)
  category          Category
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Account {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  income    Decimal  @default(0) @db.Decimal(10, 2)
  expense   Decimal  @default(0) @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pot {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  name        String
  totalAmount Decimal  @db.Decimal(10, 2)
  savedAmount Decimal  @db.Decimal(10, 2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Budget {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  maxAmount   Decimal  @default(0) @db.Decimal(10, 2)
  spentAmount Decimal  @default(0) @db.Decimal(10, 2)
  category    Category @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
